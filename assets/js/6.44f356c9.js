(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{250:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("ul",[s("li",[t._v("区分大小写：意味着变量名test和Test是两个不同的变量。")]),t._v(" "),s("li",[t._v("标识符：标识符是可以按照如下规则组成的一个或者多个字符。\n"),s("ul",[s("li",[t._v("第一个字符必须是一个字母、下划线(_)或者美元符号($)")]),t._v(" "),s("li",[t._v("其他字符可以是字母、下划线、美元符号或者数字。")])])])]),t._v(" "),s("p",[t._v("总结：数字不能作为标识符的首位，而字母、下划线、美元符号均可以作为标识符的任意位置出现。"),s("br"),t._v("\n注意：不能把关键字、保留字、true、false和null作为标识符。（关键字和保留字后面有相应的概念说明）")]),t._v(" "),s("ul",[s("li",[t._v("注释：在Javascript中沿用了c语言风格的注释，即如下格式：\n"),s("ul",[s("li",[t._v("单行注释")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 单行注释")]),t._v("\n")])])]),s("ul",[s("li",[t._v("多行注释")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n   * 这是一个多行\n   * （块级）注释(中间两个星号非必须，只是提高可读性)\n   */")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("严格模式：如果要在整个脚本中启用严格模式，可以在脚本顶部添加如下代码："),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use scrict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),t._v("也可以在函数内部第一行包含这个编译指示，这样就可以指定该函数在严格模式下执行。"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use scrict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("语句：\n"),s("ul",[s("li",[t._v("以分号结尾。如果省略分号，则由解析器确定语句的结尾。")]),t._v(" "),s("li",[t._v("使用代码块可以让编程意图更加清晰，也能降低代码出错的几率。")])])])]),t._v(" "),s("h2",{attrs:{id:"关键字和保留字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字"}},[t._v("#")]),t._v(" 关键字和保留字")]),t._v(" "),s("p",[t._v("关键字：这些关键字可用于表示控制语句的开始或者结束。或者用于执行特定操作等。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("break")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("do")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("instanceof")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("typeof")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("case")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("else")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("new")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("var")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("catch")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("finally")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("return")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("void")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("continue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("for")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("switch")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("while")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("debugger")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("this")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("with")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("default")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("if")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("throw")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("delete")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("in")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("try")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("p",[t._v("保留字：ECMA-262还描述了另外一组不能作为标识符的保留字。它们可能在未来会用作关键字。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("abstract")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("enum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("short")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("export")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("interface")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("static")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("extends")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("super")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("final")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("native")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("synchronized")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("class")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("package")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("throws")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("const")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("goto")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("transient")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("debugger")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("implements")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("protected")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("volatile")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("import")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("p",[t._v("在ES5中在非严格模式下把运行时的保留字缩减为以下这些：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("class")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("enum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("extends")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("super")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("const")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("export")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("import")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("p",[t._v("在严格模式下，ES5还对以下的保留字施加了限制：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("#")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("implements")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("package")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("public")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("interface")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("static")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("let")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("protected")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("yield")])])])]),t._v(" "),s("p",[t._v("为了保证兼容性，尽量不要用以上的关键字和保留字。防止发生意料之外的错误。")]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("ul",[s("li",[t._v("ECMAScript的变量是松散类型的，就是可以用来保存任何类型的数据。每个变量仅仅是一个保存值的占位符而已。定义变量时要用var操作符，后面跟变量名："),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("使用var操作符定义的变量将成为定义该变量作用域的局部变量，如果没有赋任何值，那么该值默认为undefined")]),t._v(" "),s("li",[t._v("可以在变量值的同时修改值的类型，但是这种做法是不推荐的。"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效但是不推荐")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("如果在函数中使用var定义了一个变量，那么这个变量在函数退出后被销毁。")]),t._v(" "),s("li",[t._v("省略var运算符，可以创建一个全局变量，但是这种做法是不推荐的。因为全局变量很难维护，也会由于相应变量不会马上就有定义而导致不必要的混乱"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量，不推荐使用")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hi"')]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("定义多个变量，只需要用逗号隔开即可。"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      found "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("ECMAScript中有五种（实际上现在为6种，es6中新增了Symbol）简单数据类型（也称基本数据类型）:Undefined,Null,Boolean,Number,String和一种复杂数据类型：Object。")]),t._v(" "),s("ul",[s("li",[t._v("typeof运算符")])]),t._v(" "),s("p",[t._v("使用typeof可能返回下列某个字符串。")]),t._v(" "),s("ul",[s("li",[t._v('如果这个值为定义，返回"undefined"。')]),t._v(" "),s("li",[t._v('如果这个值是布尔值，返回"boolean"。')]),t._v(" "),s("li",[t._v('如果这个值是字符串，返回"string"。')]),t._v(" "),s("li",[t._v('如果这个值是数值，返回"number"。')]),t._v(" "),s("li",[t._v('如果这个值是对象或者null，返回"object"。')]),t._v(" "),s("li",[t._v('如果这个值是函数，返回"function"')])]),t._v(" "),s("p",[t._v("注:")]),t._v(" "),s("ol",[s("li",[t._v("typeof是一个操作符而不是函数。")]),t._v(" "),s("li",[t._v("typeof(null)的结果是object，这个可以算作一个bug，也可以理解成null是一个空对象的指针，但是它并不是一个对象。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("undefined类型")]),t._v(" "),s("ul",[s("li",[t._v("它只有一个值，即特殊的undefined。")]),t._v(" "),s("li",[t._v("如果一个变量声明但是没有初始化，那么它的值是undefined。")]),t._v(" "),s("li",[t._v("typeof未初始化和未声明的变量都是undefined。")]),t._v(" "),s("li",[t._v("建议声明即赋值初始化。")])])]),t._v(" "),s("li",[s("p",[t._v("null类型")]),t._v(" "),s("ul",[s("li",[t._v("它同样也只有一个值，即特殊的null。")]),t._v(" "),s("li",[t._v("从逻辑的角度上看，null表示一个空对象指针。")]),t._v(" "),s("li",[t._v("如果定义的变量准备在将来保存对象，那么最好将该变量初始化为null而不是其他值。这样的目的是只要检查null值就可以看变量是否已经保存了一个对象的引用。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("car"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对car对象执行某些操作")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("undefined值是派生自null的，所以有:")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Boolean类型\n将一个值转换为对应的Boolean类型的值，实际上都调用了Boolean()函数。下表给出各种数据类型及对应的转换规则。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("转换为true的值")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("转换为false的值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何非空字符串")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""(空字符串)')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何非零数字值（包括无穷大）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0和NaN")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("任何对象")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("null(虽然严格说null并不是Object类型)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Undefined")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(不存在这样的值)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("undefined")])])])]),t._v(" "),s("p",[t._v("因为存在自动执行的Boolean转换，所以知道在流控制语句中使用的是什么变量至关重要。")])]),t._v(" "),s("li",[s("p",[t._v("Number类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不同进制的数字的表示")]),t._v(" "),s("ol",[s("li",[t._v("十进制：直接用数字表示就可以。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("八进制：八进制字面值的第一位必须是0，然后是八进制序列（0～7）。如果字面值中的值超过了范围，那么前导0将被忽略。后面的数值当作十进制来解析。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("070")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 八进制的56")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("079")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效的八进制数值---解析为79")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效的八进制数值---解析为8")]),t._v("\n")])])]),s("p",[t._v("注：八进制字面量在严格模式下是无效的，会导致支持该模式的Javascript引擎抛出错误。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("十六进制：十六进制字面量的前两位必须是0x，后面接任何十六进制数字（0～9及A～F）。其中，A～F可以大写也可以小写。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hexNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制的10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hexNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制的31")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("浮点数值")]),t._v(" "),s("ol",[s("li",[t._v("所谓浮点数值就是该数值中必须包含一个小数点。并且小数点后面必须至少有一位数字。虽然小数点前面可以没有整数，但是这种写法并不推荐。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，但不推荐")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("如果小数点后面没有跟数字，那么这个值将作为整数值保存。同样，如果浮点数本身表示的就是一个整数，那么该值也会转换为整数。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 小数点后面没有数字---解析为1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数---解析为10")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("极大或者极小的值可以用e表示法（科学计数法）表示。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.125e7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于31250000")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("浮点数值的最高精度为17位小数，但是进行算数计算的时候，其精确性远不如整数。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要做这样的测试，有个很经典的例子就是，0.1 + 0.2 = 0.30000000000000004")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'You got 0.3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("数值范围\n"),s("ul",[s("li",[t._v("超过Number.MAX_VALUE的正值会被转换成Infinity,负值会被转换成-Infinity")]),t._v(" "),s("li",[t._v("如果某次计算返回了正或负的Infinity值，那么该值将无法参与下次计算。判断某个值是否是有穷的（即最小值到最大值之间）可以用isFinite()函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Infinity")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("Number.NEGATIVE_INFINITY: -Infinity，Number.POSITIVE_INFINITY:Infinity(正无穷和负无穷)")])]),t._v(" "),s("li",[s("p",[t._v("Number.MAX_VALUE的值为：Infinity（通常情况下这个值为1.7976931348623157e+308)")])]),t._v(" "),s("li",[s("p",[t._v("Number.MIN_VALUE的值为：通常情况下这个值为5e-324")])])])])])]),t._v(" "),s("li",[s("p",[t._v("NaN(非数值)")]),t._v(" "),s("ol",[s("li",[t._v("任何涉及NaN操作都返回NaN")]),t._v(" "),s("li",[t._v("NaN和任何值都不相等，包括它自身")]),t._v(" "),s("li",[t._v("判断一个值是否不是数字可以用isNaN函数，这个函数接收一个参数，该参数可以是任何类型，而该函数会帮我们确定这个参数是否不是数值。isNaN接收到这个参数后，会尝试先将它转换为数值，而任何不能被转化的数值的值都会导致这个函数返回true。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false(10是一个数值)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false(可以被转化成数值10)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false(可以被转化成数值1)")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("数值转换\n数值转换共有三个函数：Number(),ParseInt(),ParseFloat()\nNumber的转换规则如下：")]),t._v(" "),s("ol",[s("li",[t._v("如果是Boolean值，true和false将分别会转换成1和0。")]),t._v(" "),s("li",[t._v("如果是数字值，只是简单的传入和返回。")]),t._v(" "),s("li",[t._v("如果是null值，返回0。")]),t._v(" "),s("li",[t._v("如果是undefined，返回NaN。")]),t._v(" "),s("li",[t._v("如果是字符串则遵循如下规则：\n"),s("ul",[s("li",[t._v('如果字符串中只包括数字，则将其转换为十进制数值，即"1"变为1，"123"变成123，"011"变成11（前导0可以被忽略，带正负号也可以被转换）')]),t._v(" "),s("li",[t._v('如果字符串中包含有效的浮点格式，如"1.1"，则将其转换成对应的浮点数值（同样可以忽略前导0，正负号可以被转换）')]),t._v(" "),s("li",[t._v('如果字符串中包含有效的十六进制格式，例如："oxf"，则将其转换成相同大小的十进制整数。')]),t._v(" "),s("li",[t._v("如果字符串是空的，不包含任何字符，则将其转换为0。")]),t._v(" "),s("li",[t._v("如果字符串中包含除上述格式之外的字符，则将其转成NaN。")])])]),t._v(" "),s("li",[t._v("如果是对象，则调用对象的valueOf()方法，然后依次按照前面的规则转换返回的值。如果转换的结果为NaN,则调用对象的toString()方法，然后再次依照前面的规则转换返回的字符串值。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"000011"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("由于Number()函数在转换字符串时比较复杂且不够合理。处理整数的时候，更常用的是parseInt()函数。")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);